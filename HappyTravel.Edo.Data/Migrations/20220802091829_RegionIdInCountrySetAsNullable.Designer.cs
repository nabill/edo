// <auto-generated />
using System;
using System.Collections.Generic;
using System.Text.Json;
using HappyTravel.Edo.Data;
using HappyTravel.Edo.Data.Agents;
using HappyTravel.Edo.Data.Bookings;
using HappyTravel.Money.Models;
using HappyTravel.MultiLanguage;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HappyTravel.Edo.Data.Migrations
{
    [DbContext(typeof(EdoContext))]
    [Migration("20220802091829_RegionIdInCountrySetAsNullable")]
    partial class RegionIdInCountrySetAsNullable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgis");
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence("itn_seq");

            modelBuilder.Entity("HappyTravel.Edo.Data.Agents.Agency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountManagerId")
                        .HasColumnType("integer");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<int>>("Ancestors")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<string>("BillingEmail")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ContractKind")
                        .HasColumnType("integer");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CountryHtId")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<MoneyAmount?>("CreditLimit")
                        .HasColumnType("jsonb");

                    b.Property<string>("Fax")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsContractUploaded")
                        .HasColumnType("boolean");

                    b.Property<string>("LegalAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LocalityHtId")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text");

                    b.Property<int>("PreferredCurrency")
                        .HasColumnType("integer");

                    b.Property<int>("PreferredPaymentMethod")
                        .HasColumnType("integer");

                    b.Property<string>("VatNumber")
                        .HasColumnType("text");

                    b.Property<string>("VerificationReason")
                        .HasColumnType("text");

                    b.Property<int>("VerificationState")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<DateTimeOffset?>("Verified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Website")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Ancestors");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Ancestors"), "gin");

                    b.ToTable("Agencies");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Agents.AgencySystemSettings", b =>
                {
                    b.Property<int>("AgencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AgencyId"));

                    b.Property<AgencyAccommodationBookingSettings>("AccommodationBookingSettings")
                        .HasColumnType("jsonb");

                    b.Property<Dictionary<string, bool>>("EnabledSuppliers")
                        .HasColumnType("jsonb");

                    b.HasKey("AgencyId");

                    b.ToTable("AgencySystemSettings");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Agents.Agent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AppSettings")
                        .HasColumnType("jsonb");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IdentityHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserSettings")
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Agents.AgentAgencyRelation", b =>
                {
                    b.Property<int>("AgentId")
                        .HasColumnType("integer");

                    b.Property<int>("AgencyId")
                        .HasColumnType("integer");

                    b.Property<int[]>("AgentRoleIds")
                        .HasColumnType("integer[]");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("AgentId", "AgencyId");

                    b.ToTable("AgentAgencyRelations", (string)null);
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Agents.AgentDirectApiClientRelation", b =>
                {
                    b.Property<int>("AgentId")
                        .HasColumnType("integer");

                    b.Property<int>("AgencyId")
                        .HasColumnType("integer");

                    b.Property<string>("DirectApiClientId")
                        .HasColumnType("text");

                    b.HasKey("AgentId", "AgencyId", "DirectApiClientId");

                    b.ToTable("AgentDirectApiClientRelations");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Agents.AgentRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsPreservedInAgency")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Permissions")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("AgentRoles");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Agents.AgentSystemSettings", b =>
                {
                    b.Property<int>("AgentId")
                        .HasColumnType("integer");

                    b.Property<int>("AgencyId")
                        .HasColumnType("integer");

                    b.Property<AgentAccommodationBookingSettings>("AccommodationBookingSettings")
                        .HasColumnType("jsonb");

                    b.Property<Dictionary<string, bool>>("EnabledSuppliers")
                        .HasColumnType("jsonb");

                    b.HasKey("AgentId", "AgencyId");

                    b.ToTable("AgentSystemSettings");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Agents.ApiClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AgencyId")
                        .HasColumnType("integer");

                    b.Property<int>("AgentId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AgencyId");

                    b.HasIndex("AgentId");

                    b.HasIndex("Name", "PasswordHash");

                    b.ToTable("ApiClients");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Agents.BalanceNotificationSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AgencyAccountId")
                        .HasColumnType("integer");

                    b.Property<int[]>("Thresholds")
                        .HasColumnType("integer[]");

                    b.HasKey("Id");

                    b.ToTable("BalanceNotificationSettings");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Agents.UploadedImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AgencyId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AgencyId", "FileName");

                    b.ToTable("UploadedImages");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Bookings.AppliedBookingMarkup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int>("Currency")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("Paid")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PolicyId")
                        .HasColumnType("integer");

                    b.Property<string>("ReferenceCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Paid");

                    b.ToTable("AppliedBookingMarkups");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Bookings.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AccommodationId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<AccommodationInfo>("AccommodationInfo")
                        .HasColumnType("jsonb");

                    b.Property<string>("AccommodationName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("AgencyId")
                        .HasColumnType("integer");

                    b.Property<int>("AgentId")
                        .HasColumnType("integer");

                    b.Property<List<CancellationPolicy>>("CancellationPolicies")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("jsonb")
                        .HasDefaultValueSql("'[]'::jsonb");

                    b.Property<DateTimeOffset?>("Cancelled")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("CheckInDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("CheckOutDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ClientReferenceCode")
                        .HasColumnType("text");

                    b.Property<decimal>("Commission")
                        .HasColumnType("numeric");

                    b.Property<DateTimeOffset?>("ConfirmationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("CreditCardPrice")
                        .HasColumnType("numeric");

                    b.Property<int>("Currency")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("DeadlineDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("DeadlineNotificationSent")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("HtId")
                        .HasColumnType("text");

                    b.Property<bool>("IsAdvancePurchaseRate")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDirectContract")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPackage")
                        .HasColumnType("boolean");

                    b.Property<string>("ItineraryNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("en");

                    b.Property<AccommodationLocation>("Location")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("MainPassengerName")
                        .HasColumnType("text");

                    b.Property<string>("Nationality")
                        .HasColumnType("text");

                    b.Property<decimal>("NetPrice")
                        .HasColumnType("numeric");

                    b.Property<int?>("OfflineDeadlineNotificationsSent")
                        .HasColumnType("integer");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("integer");

                    b.Property<int>("PaymentType")
                        .HasColumnType("integer");

                    b.Property<string>("PropertyOwnerConfirmationCode")
                        .HasColumnType("text");

                    b.Property<string>("ReferenceCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Residency")
                        .HasColumnType("text");

                    b.Property<string>("Rooms")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("jsonb")
                        .HasDefaultValueSql("'[]'::jsonb");

                    b.Property<List<KeyValuePair<string, string>>>("SpecialValues")
                        .HasColumnType("jsonb");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("SupplierCode")
                        .HasColumnType("text");

                    b.Property<string>("SupplierReferenceCode")
                        .HasColumnType("text");

                    b.Property<List<string>>("Tags")
                        .HasColumnType("text[]");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric");

                    b.Property<int>("UpdateMode")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("ClientReferenceCode");

                    b.HasIndex("IsDirectContract");

                    b.HasIndex("ItineraryNumber");

                    b.HasIndex("MainPassengerName");

                    b.HasIndex("ReferenceCode");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Bookings.BookingAuditLogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AgentId")
                        .HasColumnType("integer");

                    b.Property<string>("BookingDetails")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<int>("BookingId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.HasKey("Id");

                    b.ToTable("BookingAuditLog", (string)null);
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Bookings.BookingConfirmationHistoryEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<string>("ConfirmationCode")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Initiator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReferenceCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("ReferenceCode");

                    b.ToTable("BookingConfirmationHistory", (string)null);
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Bookings.BookingRequest", b =>
                {
                    b.Property<string>("ReferenceCode")
                        .HasColumnType("text");

                    b.Property<string>("AvailabilityData")
                        .HasColumnType("text");

                    b.Property<string>("RequestData")
                        .HasColumnType("text");

                    b.HasKey("ReferenceCode");

                    b.ToTable("BookingRequests");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Bookings.BookingStatusHistoryEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AgencyId")
                        .HasColumnType("integer");

                    b.Property<int>("ApiCallerType")
                        .HasColumnType("integer");

                    b.Property<int>("BookingId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Event")
                        .HasColumnType("integer");

                    b.Property<int>("Initiator")
                        .HasColumnType("integer");

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<int>("Source")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ApiCallerType");

                    b.HasIndex("BookingId");

                    b.HasIndex("UserId");

                    b.ToTable("BookingStatusHistory", (string)null);
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Company.CompanyAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CompanyBankId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Currency")
                        .HasColumnType("integer");

                    b.Property<string>("Iban")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IntermediaryBankAbaNo")
                        .HasColumnType("text");

                    b.Property<string>("IntermediaryBankAccountNumber")
                        .HasColumnType("text");

                    b.Property<string>("IntermediaryBankName")
                        .HasColumnType("text");

                    b.Property<string>("IntermediaryBankSwiftCode")
                        .HasColumnType("text");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CompanyBankId");

                    b.ToTable("CompanyAccounts", (string)null);
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Company.CompanyBank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RoutingCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SwiftCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CompanyBanks", (string)null);
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Documents.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Data")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ParentReferenceCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ServiceSource")
                        .HasColumnType("integer");

                    b.Property<int>("ServiceType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Number");

                    b.HasIndex("ServiceSource", "ServiceType", "ParentReferenceCode");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Documents.Receipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Data")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("integer");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ParentReferenceCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ServiceSource")
                        .HasColumnType("integer");

                    b.Property<int>("ServiceType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ServiceSource", "ServiceType", "ParentReferenceCode");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Infrastructure.EntityLock", b =>
                {
                    b.Property<string>("EntityDescriptor")
                        .HasColumnType("text");

                    b.Property<string>("LockerInfo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("EntityDescriptor");

                    b.ToTable("EntityLock", (string)null);
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Infrastructure.UserInvitation", b =>
                {
                    b.Property<string>("CodeHash")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Data")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("InvitationStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<int>("InvitationType")
                        .HasColumnType("integer");

                    b.Property<int?>("InviterAgencyId")
                        .HasColumnType("integer");

                    b.Property<int>("InviterUserId")
                        .HasColumnType("integer");

                    b.HasKey("CodeHash");

                    b.ToTable("UserInvitations");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Locations.Country", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<int>("MarketId")
                        .HasColumnType("integer");

                    b.Property<MultiLanguage<string>>("Names")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<int?>("RegionId")
                        .HasColumnType("integer");

                    b.HasKey("Code");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Locations.Market", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<MultiLanguage<string>>("Names")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.ToTable("Markets");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Locations.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<JsonDocument>("Names")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Management.Administrator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int[]>("AdministratorRoleIds")
                        .HasColumnType("integer[]");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IdentityHash")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("IdentityHash");

                    b.ToTable("Administrators");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Management.AdministratorRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int[]>("NotificationTypes")
                        .HasColumnType("integer[]");

                    b.Property<int>("Permissions")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("AdministratorRoles");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Management.ManagementAuditLogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AdministratorId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EventData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ManagementAuditLog");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Management.ServiceAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ServiceAccounts");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Markup.AgencyMarkupBonusesAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AgencyId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric");

                    b.Property<int>("Currency")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AgencyId");

                    b.ToTable("AgencyMarkupBonusesAccounts", (string)null);
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Markup.DisplayMarkupFormula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AgencyId")
                        .HasColumnType("integer");

                    b.Property<int?>("AgentId")
                        .HasColumnType("integer");

                    b.Property<string>("DisplayFormula")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AgencyId", "AgentId")
                        .IsUnique();

                    b.ToTable("DisplayMarkupFormulas");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Markup.MarkupPolicy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Currency")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("DestinationScopeId")
                        .HasColumnType("text");

                    b.Property<int>("DestinationScopeType")
                        .HasColumnType("integer");

                    b.Property<int>("FunctionType")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SubjectScopeId")
                        .HasColumnType("text");

                    b.Property<int>("SubjectScopeType")
                        .HasColumnType("integer");

                    b.Property<string>("SupplierCode")
                        .HasColumnType("text");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("DestinationScopeId");

                    b.HasIndex("SubjectScopeId");

                    b.HasIndex("SubjectScopeType");

                    b.ToTable("MarkupPolicies");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Markup.MarkupPolicyAuditLogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ApiCallerType")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EventData")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MarkupPolicyAuditLogs");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Markup.MaterializationBonusLog", b =>
                {
                    b.Property<string>("ReferenceCode")
                        .HasColumnType("text");

                    b.Property<int>("PolicyId")
                        .HasColumnType("integer");

                    b.Property<int>("AgencyAccountId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ReferenceCode", "PolicyId");

                    b.ToTable("MaterializationBonusLogs");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Notifications.DefaultNotificationOptions", b =>
                {
                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("AdminEmailTemplateId")
                        .HasColumnType("text");

                    b.Property<string>("AgentEmailTemplateId")
                        .HasColumnType("text");

                    b.Property<int>("EnabledProtocols")
                        .HasColumnType("integer");

                    b.Property<int>("EnabledReceivers")
                        .HasColumnType("integer");

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("boolean");

                    b.Property<string>("PropertyOwnerEmailTemplateId")
                        .HasColumnType("text");

                    b.HasKey("Type");

                    b.ToTable("DefaultNotificationOptions");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Notifications.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AgencyId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<JsonDocument>("Message")
                        .HasColumnType("jsonb");

                    b.Property<DateTimeOffset?>("Read")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("Received")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Receiver")
                        .HasColumnType("integer");

                    b.Property<JsonDocument>("SendingSettings")
                        .HasColumnType("jsonb");

                    b.Property<int>("SendingStatus")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Receiver");

                    b.HasIndex("SendingStatus");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Notifications.NotificationOptions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AgencyId")
                        .HasColumnType("integer");

                    b.Property<int>("EnabledProtocols")
                        .HasColumnType("integer");

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("boolean");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("UserType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AgencyId", "UserId", "UserType", "Type")
                        .IsUnique();

                    b.ToTable("NotificationOptions");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Numeration.ItnNumerator", b =>
                {
                    b.Property<string>("ItineraryNumber")
                        .HasColumnType("text");

                    b.Property<int>("CurrentNumber")
                        .HasColumnType("integer");

                    b.HasKey("ItineraryNumber");

                    b.ToTable("ItnNumerator", (string)null);
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.PaymentLinks.PaymentLink", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<int?>("AdministratorId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Currency")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("ExternalId")
                        .HasColumnType("text");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("LastPaymentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastPaymentResponse")
                        .HasColumnType("jsonb");

                    b.Property<int?>("PaymentProcessor")
                        .HasColumnType("integer");

                    b.Property<string>("ReferenceCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ServiceType")
                        .HasColumnType("integer");

                    b.HasKey("Code");

                    b.HasIndex("ReferenceCode");

                    b.ToTable("PaymentLinks");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Payments.AccountBalanceAuditLogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int>("ApiCallerType")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EventData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReferenceCode")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AccountBalanceAuditLogs");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Payments.AgencyAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AgencyId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Currency")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.HasKey("Id");

                    b.ToTable("AgencyAccounts");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Payments.CreditCardAuditLogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AgentId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int>("ApiCallerType")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Currency")
                        .HasColumnType("integer");

                    b.Property<string>("EventData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MaskedNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReferenceCode")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CreditCardAuditLogs");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Payments.NGeniusRefund", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int>("Currency")
                        .HasColumnType("integer");

                    b.Property<int>("PaymentId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("PlannedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("PlannedDate");

                    b.ToTable("NGeniusRefunds", (string)null);
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Payments.OfflinePaymentAuditLogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ApiCallerType")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ReferenceCode")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OfflinePaymentAuditLogs");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Payments.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("integer");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("CaptureId")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<DateTimeOffset>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("integer");

                    b.Property<int>("PaymentProcessor")
                        .HasColumnType("integer");

                    b.Property<string>("ReferenceCode")
                        .HasColumnType("text");

                    b.Property<decimal>("RefundedAmount")
                        .HasColumnType("numeric");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReferenceCode");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.StaticData.StaticData", b =>
                {
                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<JsonDocument>("Data")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.HasKey("Type");

                    b.ToTable("StaticData");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Suppliers.SupplierOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ConvertedCurrency")
                        .HasColumnType("integer");

                    b.Property<decimal>("ConvertedPrice")
                        .HasColumnType("numeric");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Currency")
                        .HasColumnType("integer");

                    b.Property<Deadline>("Deadline")
                        .HasColumnType("jsonb");

                    b.Property<DateTimeOffset>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("PaymentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PaymentType")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("ReferenceCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("RefundableAmount")
                        .HasColumnType("numeric");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.Property<string>("SupplierCode")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReferenceCode");

                    b.HasIndex("SupplierCode");

                    b.HasIndex("Type");

                    b.ToTable("SupplierOrders");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Company.CompanyAccount", b =>
                {
                    b.HasOne("HappyTravel.Edo.Data.Company.CompanyBank", "CompanyBank")
                        .WithMany("CompanyAccounts")
                        .HasForeignKey("CompanyBankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyBank");
                });

            modelBuilder.Entity("HappyTravel.Edo.Data.Company.CompanyBank", b =>
                {
                    b.Navigation("CompanyAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
