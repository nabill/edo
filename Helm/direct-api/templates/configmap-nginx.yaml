apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Chart.Name }}-nginx
  labels:
    app: {{ .Chart.Name }}
data:
  nginx.conf: |-
    user  nginx;
    worker_processes  auto;

    pid        /var/run/nginx.pid;

    events {
        worker_connections  1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        limit_req_zone $binary_remote_addr zone=backend:10m rate=50r/s;
        limit_req_zone $binary_remote_addr zone=health:10m rate=1r/s;
        limit_req_log_level info;
        limit_req_status 429;

        map $upstream_response_time $temprt {
          default $upstream_response_time;
          ""      0;
        }

        map $http_x_request_id $requestid {
            default $http_x_request_id;
             "" $request_id;
        }

        log_format json escape=json '{ "server_protocol": "$server_protocol", '
            '"proxy": "nginx-{{ .Chart.Name }}", '
            '"upstream_connect_time":"$upstream_connect_time", '
            '"@timestamp": "$time_iso8601", '
            '"response_time": $temprt, '
            '"status": $status, '
            '"request_id": "$requestid", '
            '"request_method": "$request_method", '
            '"request": "$request", '
            '"request_length": $request_length, '
            '"request_uri": "$request_uri", '
            '"upstream_addr": "$upstream_addr", '
            '"upstream_status": $upstream_status, '
            '"upstream_response_time": $upstream_response_time, '
            '"x_forwarded_for": "$remote_addr", '
            '"url": "$uri", '
            '"bytes_sent": "$bytes_sent", '
            '"body_bytes_sent": $body_bytes_sent, '
            '"server_port": "$server_port", '
            '"http_user_agent": "$http_user_agent", '
            '"http_referrer": "$http_referer", '
            '"http_content_type": "$sent_http_content_type", '
            '"http_host": "$http_host" }';

        real_ip_header X-Forwarded-For;
        set_real_ip_from 0.0.0.0/0;
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header Refrerer           $http_referer;
        proxy_set_header User-Agent         $http_user_agent;

        access_log /dev/stdout json;
        error_log  /dev/stderr warn;

        sendfile        on;
        server_tokens   off;
        tcp_nopush      on;
        tcp_nodelay     off;
        keepalive_timeout  100;
        reset_timedout_connection on;
        client_body_timeout 60;
        send_timeout 5;
        client_max_body_size  10m;

        upstream {{ .Chart.Name }} {
            server localhost:80;
        }

        server {
            listen       8080;
            server_name  localhost;
            location / {
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
                proxy_pass http://{{ .Chart.Name }};
            }

            location = /metrics {
                limit_req zone=health;
                allow 157.90.123.59; # Prometheus
                deny  all;
                proxy_pass http://{{ .Chart.Name }}/metrics;
            }

            location = /health {
                add_header Content-Type text/plain;
                limit_req zone=health;
                stub_status on;
                allow 127.0.0.1;
                allow 10.0.0.0/8;
                allow 192.168.0.0/16;
                allow 172.16.0.0/12;
                allow 157.90.123.59; # Prometheus
                deny  all;
                access_log off;
            }
        }
    }